<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>br.com.browseframework</groupId>
		<artifactId>browsefrw</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>br.com.browseframework</groupId>
	<artifactId>browsefrw-base</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Browse Framework - Base</name>
	<description>Base classes for all the framework</description>
	
	<build>
		<plugins>
		
			<!-- O Plugin Compiler Ã© usado para compilar os fontes do projeto. -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			
		</plugins>
	</build>
	
	<dependencies>
		<!-- ASPECTJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		
		<!-- SPRING -->		
		<!-- Core utilities used by other modules. Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-core</artifactId>
		  <version>${spring.version}</version>
		</dependency>
		 
		<!-- Expression Language (depends on spring-core). Define this if you use Spring Expression APIs (org.springframework.expression.*) -->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-expression</artifactId>
		  <version>${spring.version}</version>
		</dependency>
		 
		<!-- Bean Factory and JavaBeans utilities (depends on spring-core). Define this if you use Spring Bean APIs (org.springframework.beans.*) -->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-beans</artifactId>
		  <version>${spring.version}</version>
		</dependency>
		 
		<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans). Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-aop</artifactId>
		  <version>${spring.version}</version>
		</dependency>
		<dependency>  
		    <groupId>org.springframework</groupId>  
		    <artifactId>spring-aspects</artifactId>  
		  <version>${spring.version}</version>
		</dependency> 
		 
		<!-- Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans). This is the central artifact for Spring's Dependency Injection Container and is generally always defined -->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-context</artifactId>
		  <version>${spring.version}</version>
		</dependency>
		 
		<!-- Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration. Define this if you need any of these integrations -->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-context-support</artifactId>
		  <version>${spring.version}</version>
		</dependency>
		 
		<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context). Define this if you use Spring Transactions or DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-tx</artifactId>
		  <version>${spring.version}</version>
		</dependency>
		 
		<!-- Support for testing Spring applications with tools such as JUnit and TestNG. This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs -->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-test</artifactId>
		  <version>${spring.version}</version>
		  <scope>test</scope>
		</dependency>
		 
		<!-- LOG4J -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		
		<!-- Simple Logging Facade for Java (SLF4J) -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>

	</dependencies>
	
</project>
